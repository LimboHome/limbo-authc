<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~  Copyright 2020-2024 Limbo Team (https://github.com/limbo-world).
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  See the License for the specific language governing permissions and
  ~  limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.limbo.authc.core.dao.RolePermissionPolicyMapper" >

    <resultMap id="RolePermission" type="org.limbo.authc.api.interfaces.beans.po.RolePermissionPolicyPO">
        <result column="project_id" jdbcType="BIGINT" property="projectId" javaType="Long"/>
        <result column="role_id" jdbcType="BIGINT" property="roleId" javaType="Long"/>
        <result column="perm_code" jdbcType="VARCHAR" property="permCode" javaType="String"/>
        <result column="policy" jdbcType="VARCHAR" property="policy" javaType="String"/>
    </resultMap>

    <insert id="addPolicies">
        insert into l_role_permission_policy ( project_id, role_id, perm_code, policy )
        values
            <foreach collection="policies" separator="," item="rp">
                ( #{rp.projectId}, #{rp.roleId}, #{rp.permCode}, #{rp.policy} )
            </foreach>
    </insert>

    <delete id="deletePolicies">
        delete from l_role_permission_policy where role_id = #{roleId} and project_id = #{projectId}
    </delete>

    <delete id="deletePoliciesNotIn">
        delete from l_role_permission_policy
        where role_id = #{roleId}
              and perm_code not in (<foreach collection="permCodes" separator="," item="pc">#{pc}</foreach>)
              and project_id = #{projectId}
    </delete>

    <delete id="deletePoliciesByPermission">
        delete from l_role_permission_policy
        where perm_code = #{permCode}
              and project_id = #{projectId}
    </delete>

    <select id="getPolicies" resultMap="RolePermission">
        select * from l_role_permission_policy
        where project_id = #{projectId}
              and role_id in (<foreach collection="roleIds" separator="," item="ri">#{ri}</foreach>)
              <if test="policy != null and policy != ''">
                  and policy = #{policy}
              </if>
    </select>

    <select id="getAllowedPermCodes" resultType="java.lang.String">
        select perm_code
        from l_role_permission_policy
        where project_id = #{projectId} and policy = 'ALLOWED'
              and role_id in (<foreach collection="roleIds" separator="," item="ri">#{ri}</foreach>)
    </select>

    <select id="getRefusedPermCodes" resultType="java.lang.String">
        select perm_code
        from l_role_permission_policy
        where project_id = #{projectId} and policy = 'REFUSED'
              and role_id in (<foreach collection="roleIds" separator="," item="ri">#{ri}</foreach>)
    </select>

</mapper>